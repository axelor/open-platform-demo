# Application Information
# ~~~~~
application.name = Axelor DEMO
application.description = The Demo Application
application.version = 7.4.0

# Author/Company
# ~~~~~
application.author = Axelor
application.copyright = Copyright (c) {year} Axelor. All Rights Reserved.

# Header Logo. Should be 40px in height with transparent background
#application.logo = img/axelor.png

# Header logo for dark mode theme. Should be 40px in height with transparent background.
#application.logo-dark =

# Website icon. Must be a multiple of 48px square for favicon compatibility.
#application.icon = ico/favicon.ico

# Website icon for dark mode theme. Must be a multiple of 48px square for favicon compatibility.
#application.icon-dark =

# Home Website
# ~~~~~
# Link to be used with header logo
application.home = https://www.axelor.com

# Link to the online help
# ~~~~~
application.help = https://docs.axelor.com

# Application deployment mode
# ~~~~~
# Set to 'dev' for development mode else 'prod'
application.mode = dev

# CSS Theme
# ~~~~~
# Set default CSS theme, for example `blue`
application.theme = auto

# Default Locale (language)
# ~~~~~
# Set default application locale (en, fr, fr_FR, en_US)
application.locale =

# Base url of the application.
#application.base-url =

# how often client polls in seconds
#application.polling-interval = 10

# Enable multi-tenancy
#application.multi-tenancy = false

# `if-feature` custom class
#application.config-provider = com.axelor.app.MyAppConfig

# Pattern to validate domain expressions
#application.domain-blocklist-pattern = (\\(\\s*(SELECT|DELETE|UPDATE)\\s+)|query_to_xml|some_another_function

# Groovy scripts cache size
#application.script.cache.size = 1000

# Groovy scripts cache entry expire time (in minutes)
#application.script.cache.expire-time = 20

# whether to not check action permissions
#application.permission.disable-action = false

# whether to not check relational fields permissions
#application.permission.disable-relational-field = false

# whether to enable the password reset feature
#application.reset-password.enabled = true

# maximum validity period of password reset tokens in hours
#application.reset-password.max-age = 24

# OpenAPI configuration
# ~~~~~

# Enable OpenAPI resource endpoint
#application.openapi.enabled = true

#List of packages (and their subpackages) to exclude from OpenAPI scans
#application.openapi.scan.exclude.packages =

#List of classes to exclude from OpenAPI scans.
#application.openapi.scan.exclude.classes =

#List of packages (and their subpackages) to include in OpenAPI scans.
#application.openapi.scan.packages =

#List of classes to include in OpenAPI scans.
#application.openapi.scan.classes =

# Enable both OpenAPI resource endpoint and Swagger UI
#application.swagger-ui.enabled = true

# Allow "Try it out" in Swagger UI
#application.swagger-ui.allow-try-it-out = false

# Sign-in page configuration
# ~~~~~

# Sign-in logo, default to `application.logo`
#application.sign-in.logo =

# Sign-in title
application.sign-in.title = <h3>Welcome to the demo app</h3>

# Sign-in footer
application.sign-in.footer = <div style="width: 100%; text-align: left;">&#x2754; Demo App is based on <a href="https://github.com/axelor/axelor-open-platform">Axelor Open Platform</a> <br/>\
  &#x1F440; Need info? Browse the <a href="https://docs.axelor.com/adk">documentation</a></div>

# Sign-in username field configs
#application.sign-in.fields.username.show-title = true
#application.sign-in.fields.username.title = Username
#application.sign-in.fields.username.placeholder =
#application.sign-in.fields.username.icon =

# Sign-in password field configs
#application.sign-in.fields.password.show-title = true
#application.sign-in.fields.password.title = Password
#application.sign-in.fields.password.placeholder =
#application.sign-in.fields.password.icon =

# Sign-in tenant field configs
#application.sign-in.fields.tenant.show-title = true
#application.sign-in.fields.tenant.title = Tenant

# Extra buttons inside the form login
#application.sign-in.buttons.<button-name>.title =
#application.sign-in.buttons.<button-name>.type =
#application.sign-in.buttons.<button-name>.variant =
#application.sign-in.buttons.<button-name>.icon =
#application.sign-in.buttons.<button-name>.link =
#application.sign-in.buttons.<button-name>.order =

# Sign-in submit button configs
#application.sign-in.buttons.submit.title = Sign in
#application.sign-in.buttons.submit.type = button
#application.sign-in.buttons.submit.variant = primary
#application.sign-in.buttons.submit.icon =

# Encryption
# ~~~~~
# Set encryption password
encryption.password = MySuperSecretKey

# Set encryption algorithm (CBC or GCM)
encryption.algorithm = CBC

# Database settings
# ~~~~~
# See hibernate documentation for connection parameters

# PostgreSQL
db.default.driver = org.postgresql.Driver
db.default.ddl = update
db.default.url = jdbc:postgresql://localhost:5432/open-platform-demo-dev
db.default.user = axelor
db.default.password =

# Shared cache mode settings
# ~~~~~
javax.persistence.sharedCache.mode = ENABLE_SELECTIVE

# MySQL
#db.default.driver = com.mysql.cj.jdbc.Driver
#db.default.ddl = update
#db.default.url = jdbc:mysql://localhost:3306/axelor_demo_dev
#db.default.user = axelor
#db.default.password =

# Oracle
#db.default.driver = oracle.jdbc.OracleDriver
#db.default.ddl = update
#db.default.url = jdbc:oracle:thin:@localhost:1521:oracle
#db.default.user = axelor
#db.default.password =

# HikariCP connection pool
# ~~~~~
hibernate.hikari.minimumIdle = 5
hibernate.hikari.maximumPoolSize = 20
hibernate.hikari.idleTimeout = 300000

# Session timeout (in minutes)
# ~~~~~
session.timeout = 60

# Storage path for upload files (attachments)
# ~~~~~
# use {user.home} key to save files under user home directory, or
# use absolute path where server user have write permission.
data.upload.dir = {user.home}/.axelor/attachments

# Upload filename pattern, default is auto where file is save with same name
# in the given upload dir, if file is already there, a count number is
# appended to file name.
#
# This can be overridden by providing custom name pattern, for example:
#
#   file.upload.filename.pattern = {year}-{month}/{day}/{name}
#   file.upload.filename.pattern = {AA}/{name}
#
# {name} should be placed at the end. If omitted, he is append by default a the end.
#
# Following placeholders can be used:
#
# {year} - current year
# {month} - current month
# {day} - current day
# {name} - file name
# {A} - first letter from file name
# {AA} - first 2 letter from file name
# {AAA} - first 3 letter from file name
#
#data.upload.filename.pattern = auto

# Maximum upload size (in MB)
# ~~~~~
data.upload.max-size = 5

# Whitelist pattern can be used to allow file upload with matching names.
#
# For example: \\.(xml|html|jpg|png|pdf|xsl)$
#
# Regular expression
# ~~~~~
#data.upload.whitelist.pattern =

# Blacklist pattern can be used to block file upload with matching names.
#
# Regular expression
# ~~~~~
#data.upload.blacklist.pattern =

# Whitelist content type can be used to allow file upload with matching content.
#
# List of mime-types (plain/text,image/*,video/webm)
# ~~~~~
#data.upload.whitelist.types =

# Blacklist content type can be used to block file upload with matching content.
#
# List of mime-types (plain/text,image/*,video/webm)
# ~~~~~
#data.upload.blacklist.types =

# The external report design directory
# ~~~~~
# this directory is searched for the rptdesign files
# (fallbacks to designs provided by modules)
reports.design-dir = {user.home}/.axelor/reports

# Storage path for report outputs
reports.output-dir = {user.home}/.axelor/reports-gen

# Data export (csv) encoding
# ~~~~
# Use Windows-1252, ISO-8859-1 or ISO-8859-15 if targeting ms excel
# (excel does not recognize utf8 encoded csv)
data.export.encoding = UTF-8

# Storage path for export action
# ~~~~~
data.export.dir = {user.home}/.axelor/data-export

# Maximum number of records to export, -1 means unlimited
#data.export.max-size = 5000

# Export fetch size
#data.export.fetch-size = 1000

# default export separator
#data.export.separator = ,

# whether to export collections fields
data.export.collections.enabled = true

# export separator for collections fields
data.export.collections.separator = \u0020|\u0020

# define a fixed locale for all exports
#data.export.locale =

# Specify whether to import demo data
# ~~~~~
data.import.demo-data = true

# Storage path for templates
# ~~~~~
template.search-dir = {user.home}/.axelor/templates

# Auth
# ~~~~~

# comma-separated list of provider names (EE only)
#auth.provider-order =

# provider to use by default (in place of the form client) (EE only)
#auth.provider-default =

# Default callback URL (for indirect clients)
#auth.callback-url =

# user provisioning: create / link / none
#auth.user.provisioning = none

# default group for created users
#auth.user.default-group = users

# attribute used as the value for the principal name.
#auth.user.principal-attribute = email

# logout URL
#auth.logout.default-url =

# logout URL pattern
#auth.logout.url-pattern =

# remove profiles from session (EE only)
#auth.logout.local = true

# call identity provider logout endpoint (EE only)
#auth.logout.central = false

# enable indirect and/or direct basic auth
#auth.local.basic-auth = indirect, direct

# Google OpenID Connect (EE only)
# ~~~~~

# client ID
#auth.provider.google.client-id =
# client secret
#auth.provider.google.secret =

# Keycloak OpenID Connect (EE only)
# ~~~~~

# client ID
#auth.provider.keycloak.client-id = demo-app
# client secret
#auth.provider.keycloak.secret = 233d1690-4498-490c-a60d-5d12bb685557

# authentication realm
#auth.provider.keycloak.realm = demo-app
# Keycloak server base URI
#auth.provider.keycloak.base-uri = http://localhost:8083/auth

# SAML 2.0 (EE only)
# ~~~~~

# path to keystore
#auth.provider.saml.keystore-path = {java.io.tmpdir}/samlKeystore.jks
# value of the -storepass option for the keystore
#auth.provider.saml.keystore-password = open-platform-demo-passwd
# value of the -keypass option
#auth.provider.saml.private-key-password = open-platform-demo-passwd

# path to IdP metadata
#auth.provider.saml.identity-provider-metadata-path = http://localhost:9012/simplesaml/saml2/idp/metadata.php

# path to SP metadata
#auth.provider.saml.service-provider-metadata-path = {java.io.tmpdir}/sp-metadata.xml
# SP entity ID (defaults to auth.callback-url + "?client_name=SAML2Client")
#auth.provider.saml.service-provider-entity-id = sp.test.pac4j
# full callback URL for proper SP metadata generation
#auth.provider.saml.callback-url = https://example.com/my-axelor-app/callback

# call identity provider logout endpoint
#auth.logout.central = true

# LDAP Configuration
# ~~~~~

# server URL (SSL is automatically enabled with ldaps protocol)
#auth.ldap.server.url = ldap://localhost:389
# use StartTLS
#auth.ldap.server.starttls = false
# SASL authentication type: simple (default) / CRAM-MD5 / DIGEST-MD5 / EXTERNAL / GSSAPI
#auth.ldap.server.auth.type = simple

# system user
#auth.ldap.server.auth.user = cn=admin,dc=test,dc=com
#auth.ldap.server.auth.password = admin

# group search base
#auth.ldap.group.base = ou=groups,dc=test,dc=com
# a template to search groups by user login id
#auth.ldap.group.filter = (uniqueMember=uid={0})

# user search base
#auth.ldap.user.base = ou=users,dc=test,dc=com
# a template to search user by user login id
#auth.ldap.user.filter = (uid={0})

# CAS configuration (EE only)
# ~~~~~

# login url
#auth.provider.cas.login-url = https://localhost:8443/cas/login
# prefix url
#auth.provider.cas.prefix-url = https://localhost:8443/cas

# CAS validation protocol: CAS10 / CAS20 / CAS20_PROXY / CAS30 (default) / CAS30_PROXY / SAML
#auth.provider.cas.protocol = CAS30

# for logout, you can use either central logout or logout default url
#auth.logout.central = true
#auth.logout.default-url = https://localhost:8443/cas/logout

# Quartz Scheduler
# ~~~~~
# quartz job scheduler

# Specify whether to enable quartz scheduler
quartz.enable = false

# total number of threads in quartz thread pool
# the number of jobs that can run simultaneously
quartz.thread-count = 3

# SMPT configuration
# ~~~~~
# SMTP server configuration
#mail.smtp.host = 0.0.0.0
#mail.smtp.port = 1025
#mail.smtp.channel =
#mail.smtp.user = myuser
#mail.smtp.password = mypassword

# timeout settings
#mail.smtp.timeout = 60000
#mail.smtp.connection-timeout = 60000

# IMAP configuration
# ~~~~~
# IMAP server configuration
# (quartz scheduler should be enabled for fetching stream replies)
#mail.imap.host =
#mail.imap.port =
#mail.imap.channel =
#mail.imap.user =
#mail.imap.password =

# timeout settings
#mail.imap.timeout = 60000
#mail.imap.connection-timeout = 60000

# CORS configuration
# ~~~~~
# CORS settings to allow cross origin requests

# regular expression to test allowed origin or * to allow all (not recommended)
#cors.allow-origin = *
#cors.allow-credentials = true
#cors.allow-methods = GET,PUT,POST,DELETE,HEAD,OPTIONS
#cors.allow-headers = Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers

# View configuration
# ~~~~~

# Whether to use single tab layout
#view.single-tab = false

# Define the maximum opened tabs allowed
#view.max-tabs = 10

# Menu style (left, top, both)
view.menubar.location = both

# Whether to show button titles in toolbar
#view.toolbar.show-titles = false

# Whether show confirm dialog with yes/no buttons (else is Cancel/OK)
#view.confirm-yes-no = false

# If `checkbox`, grid widgets will have checkbox selection enabled
#view.grid.selection =

# Whether to show  confirm/cancel buttons from grid row editor
view.grid.editor-buttons = false

# Whether to disable views customization
view.allow-customization = true

# Whether to disable advance search sharing
#view.adv-search.share = false

# Whether to disable export full option in advance search
#view.adv-search.export-full = false

# Whether to check version value for concurrent updates when switching tabs
#view.form.check-version = false

# Whether to disable view collaboration (EE only)
#view.collaboration.enabled = true

# Pattern to validate user password
#user.password.pattern =

# Title displayed for the password pattern
#user.password.pattern-title =

# API
# ~~~~~

# Define the maximum number of items per page
api.pagination.max-per-page = 1000

# Logging
# ~~~~~
# Custom logback configuration can be provided with `logging.config` property pointing
# to a custom `logback.xml`. In this case, all the logging configuration provided here
# will be ignored.
#
# Following settings can be used to configure logging system automatically.
#
#logging.path = {user.home}/.axelor/logs
#logging.pattern.file = %d{yyyy-MM-dd HH:mm:ss.SSS} %5p ${PID:- } --- [%t] %-40.40logger{39} : %m%n
#logging.pattern.console = %clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n

# Global logging
logging.level.root = ERROR

# Axelor logging

# Log everything.
logging.level.com.axelor = DEBUG

# Hibernate logging

# Log everything. Good for troubleshooting
#logging.level.org.hibernate = INFO

# Log all SQL DML statements as they are executed
#logging.level.org.hibernate.SQL = DEBUG
#logging.level.org.hibernate.engine.jdbc = DEBUG

# Log all SQL DDL statements as they are executed
#logging.level.org.hibernate.tool.hbm2ddl = INFO

# Log all JDBC parameters
#logging.level.org.hibernate.type = ALL

# Log transactions
#logging.level.org.hibernate.transaction = DEBUG

# Log L2-Cache
#logging.level.org.hibernate.cache = DEBUG

# Log JDBC resource acquisition
#logging.level.org.hibernate.jdbc = TRACE
#logging.level.org.hibernate.service.jdbc = TRACE

# Log connection pooling
#logging.level.com.zaxxer.hikari = INFO
